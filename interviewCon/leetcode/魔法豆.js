// 给你一个 正 整数数组 beans ，其中每个整数表示一个袋子里装的魔法豆的数目。
// 请你从每个袋子中 拿出 一些豆子（也可以 不拿出），使得剩下的 非空 袋子中（即 至少 还有 一颗 魔法豆的袋子）魔法豆的数目 相等 。
// 一旦魔法豆从袋子中取出，你不能将它放到任何其他的袋子中。
// 请你返回你需要拿出魔法豆的 最少数目
//     输入：beans = [4,1,6,5]
// 输出：4
// 解释：
// - 我们从有 1 个魔法豆的袋子中拿出 1 颗魔法豆。
//   剩下袋子中魔法豆的数目为：[4,0,6,5]
// - 然后我们从有 6 个魔法豆的袋子中拿出 2 个魔法豆。
//   剩下袋子中魔法豆的数目为：[4,0,4,5]
// - 然后我们从有 5 个魔法豆的袋子中拿出 1 个魔法豆。
//   剩下袋子中魔法豆的数目为：[4,0,4,4]
// 总共拿出了 1 + 2 + 1 = 4 个魔法豆，剩下非空袋子中魔法豆的数目相等。
// 没有比取出 4 个魔法豆更少的方案。
let beans = [4,1,6,5]
function minimumRemoval (beans){
    let r = []
    beans.forEach((items)=>{
        let num = 0
        beans.forEach((item)=>{
            if(item>items){
                num+=item-items
            }else if(item<items) {
                num+=item
            }
        })
        r.push(num)
    })
   return Math.min(...r)
}
console.log(minimumRemoval (beans),'123456789')